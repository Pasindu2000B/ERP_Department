@page "/LabEquipmentList"
@using ERP.Domain.Core.Entity.DepartmentEntity.LabEntity
@using ERP.Application.DepartmentApp.Labs.Interfaces;
@using ERP.Application.DepartmentApp.Labs.UseCases;
    using ERP.Domain.Core.Entity.DepartmentEntity.LabEntity;

@inject NavigationManager NavigationManager
@inject IGetLabEquipmentListUseCase GetLabEquipmentlist;
@inject IDialogService DialogService
<h3>LabEquipmentList</h3>


<MudTable Items="@_labEquipments">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Condition</MudTh>
    
    </HeaderContent>
    <RowTemplate>
            <MudTd DataLabel="Nr">@context.LabEquipmentID</MudTd>
            <MudTd DataLabel="Sign">@context.LabEquipmentName</MudTd>
            <MudTd DataLabel="Name">@context.condition</MudTd>

        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

    <MudCardActions>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   Class="ml-auto"
                   OnClick="@(async () => await NavigateToNewPage())">Add</MudButton>
    </MudCardActions>


    @code {

    private List<LabEquipment> _labEquipments = new List<LabEquipment>();

    


    protected override async Task OnInitializedAsync()
    {
        try
        {
            var labEquipmentList = await GetLabEquipmentlist.ExecuteAsync("");

            
            if (labEquipmentList != null)
            {
                _labEquipments = labEquipmentList.ToList();
            }
        }
        catch (Exception ex)
        {
           
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
    private async Task NavigateToNewPage()
    {
        // Perform navigation to the new page (replace "/new-page" with your actual page route)
        NavigationManager.NavigateTo("/addLabEquipment");
    }

    


            
}
}


